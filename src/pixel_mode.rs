use std::fmt::Display;

use super::shader::DecodingScheme;

#[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]
pub enum PixelMode {
    Rgb,
    Bgr,
    Bpp8,
    G3b5r5g3,
    Rgba32,
    Rgb565,
    Argb8888,
    Rgba4444,
}

impl PixelMode {
    pub const ALL: &'static [Self] = &[
        Self::Rgb,
        Self::Bgr,
        Self::Bpp8,
        Self::G3b5r5g3,
        Self::Rgba32,
        Self::Rgb565,
        Self::Argb8888,
        Self::Rgba4444,
    ];

    pub fn decoding_scheme(&self) -> &'static DecodingScheme {
        match &self {
            PixelMode::Rgb => &DecodingScheme {
                red: [
                    Some(23),
                    Some(22),
                    Some(21),
                    Some(20),
                    Some(19),
                    Some(18),
                    Some(17),
                    Some(16),
                ],
                green: [
                    Some(15),
                    Some(14),
                    Some(13),
                    Some(12),
                    Some(11),
                    Some(10),
                    Some(9),
                    Some(8),
                ],
                blue: [
                    Some(7),
                    Some(6),
                    Some(5),
                    Some(4),
                    Some(3),
                    Some(2),
                    Some(1),
                    Some(0),
                ],
                bits_per_pixel: 24,
            },
            PixelMode::Bgr => &DecodingScheme {
                red: [
                    Some(15),
                    Some(14),
                    Some(13),
                    Some(12),
                    Some(11),
                    Some(10),
                    Some(9),
                    Some(8),
                ],
                green: [
                    Some(23),
                    Some(22),
                    Some(21),
                    Some(20),
                    Some(19),
                    Some(18),
                    Some(17),
                    Some(16),
                ],
                blue: [
                    Some(31),
                    Some(30),
                    Some(29),
                    Some(28),
                    Some(27),
                    Some(26),
                    Some(25),
                    Some(24),
                ],
                bits_per_pixel: 24,
            },
            PixelMode::Bpp8 => &DecodingScheme {
                red: [
                    Some(7),
                    Some(6),
                    Some(5),
                    Some(4),
                    Some(3),
                    Some(2),
                    Some(1),
                    Some(0),
                ],
                green: [
                    Some(7),
                    Some(6),
                    Some(5),
                    Some(4),
                    Some(3),
                    Some(2),
                    Some(1),
                    Some(0),
                ],
                blue: [
                    Some(7),
                    Some(6),
                    Some(5),
                    Some(4),
                    Some(3),
                    Some(2),
                    Some(1),
                    Some(0),
                ],
                bits_per_pixel: 8,
            },
            PixelMode::G3b5r5g3 => &DecodingScheme {
                red: [
                    None,
                    None,
                    None,
                    Some(12),
                    Some(11),
                    Some(10),
                    Some(9),
                    Some(8),
                ],
                green: [
                    None,
                    None,
                    Some(2),
                    Some(1),
                    Some(0),
                    Some(15),
                    Some(14),
                    Some(13),
                ],
                blue: [
                    None,
                    None,
                    None,
                    Some(7),
                    Some(6),
                    Some(5),
                    Some(4),
                    Some(3),
                ],
                bits_per_pixel: 16,
            },
            PixelMode::Rgba32 => &DecodingScheme {
                red: [
                    Some(31),
                    Some(30),
                    Some(29),
                    Some(28),
                    Some(27),
                    Some(26),
                    Some(25),
                    Some(24),
                ],
                green: [
                    Some(23),
                    Some(22),
                    Some(21),
                    Some(20),
                    Some(19),
                    Some(18),
                    Some(17),
                    Some(16),
                ],
                blue: [
                    Some(15),
                    Some(14),
                    Some(13),
                    Some(12),
                    Some(11),
                    Some(10),
                    Some(9),
                    Some(8),
                ],
                bits_per_pixel: 32,
            },
            PixelMode::Rgb565 => &DecodingScheme {
                red: [
                    None,
                    None,
                    None,
                    Some(15),
                    Some(14),
                    Some(13),
                    Some(12),
                    Some(11),
                ],
                green: [
                    None,
                    None,
                    Some(10),
                    Some(9),
                    Some(8),
                    Some(7),
                    Some(6),
                    Some(5),
                ],
                blue: [
                    None,
                    None,
                    None,
                    Some(4),
                    Some(3),
                    Some(2),
                    Some(1),
                    Some(0),
                ],
                bits_per_pixel: 16,
            },
            PixelMode::Argb8888 => &DecodingScheme {
                red: [
                    Some(23),
                    Some(22),
                    Some(21),
                    Some(20),
                    Some(19),
                    Some(18),
                    Some(17),
                    Some(16),
                ],
                green: [
                    Some(15),
                    Some(14),
                    Some(13),
                    Some(12),
                    Some(11),
                    Some(10),
                    Some(9),
                    Some(8),
                ],
                blue: [
                    Some(7),
                    Some(6),
                    Some(5),
                    Some(4),
                    Some(3),
                    Some(2),
                    Some(1),
                    Some(0),
                ],
                bits_per_pixel: 32,
            },
            PixelMode::Rgba4444 => &DecodingScheme {
                red: [
                    None,
                    None,
                    None,
                    None,
                    Some(15),
                    Some(14),
                    Some(13),
                    Some(12),
                ],
                green: [None, None, None, None, Some(11), Some(10), Some(9), Some(8)],
                blue: [None, None, None, None, Some(7), Some(6), Some(5), Some(4)],
                bits_per_pixel: 16,
            },
        }
    }
}

impl Display for PixelMode {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        f.write_str(match self {
            PixelMode::Rgb => "rgb",
            PixelMode::Bgr => "bgr",
            PixelMode::Bpp8 => "8bpp",
            PixelMode::G3b5r5g3 => "G3B5R5G3 (AW RAS)",
            PixelMode::Rgba32 => "rgba32",
            PixelMode::Rgb565 => "rgb565",
            PixelMode::Argb8888 => "argb8888",
            PixelMode::Rgba4444 => "rgba4444",
        })
    }
}
